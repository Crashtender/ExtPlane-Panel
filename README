
 *** ExtPlane-Panel ***

An external, networked cockpit panel for X-Plane flight simulator. 

Requires ExtPlane plugin installed on X-Plane:

https://github.com/vranki/ExtPlane

License: GNU GPLv3

It is possible to run this panel on the same computer or another computer 
on the network to display cockpit instruments from remote X-Plane.

Almost all instruments are drawn using scalable vector graphics for
perfect scaling and high resolutions.

The app is written using Qt and is platform independent - it runs on
different Linux variants, Mac and Windows. X-Plane SDK is NOT required
to build ExtPlane-Panel.

Target hardware is: Desktop PC's, Android, Nokia Maemo 4 & 5 devices,
MeeGo, Raspberry Pi. Minimum Qt version required is Qt 4.5 (limited by Maemo 4).


* Common build requirements *

You'll need Qt development libraries installed. To develop
the application it's easiest to use the official Qt SDK from Digia.

On Ubuntu/Debian, install packages libqt4-dev and qtmobility-dev.

* To build on Mac or Linux from command line*

$ qmake
$ make

The ExtPlane-Panel
------------------

There are currently a number of instruments available, including:

- A basic compass
- A direction indicator with the compass rose
- An airspeed indicator
- An altimeter
- An attitude indicator
- A variometer
- and an RPM gauge.

Currently most instruments look like general aviation instruments.

Usage
-----

Click inside the yellow square at top left to open main menu.

"Edit Panel", followed by "Close" (to close the menu) makes 
the instruments become selectable with a click. It is then possible to move
the instruments around. Doubleclick on an instrument to see or modify its properties
or delete it.
Edit mode can be also toggled with space key.

"Add Item" allows new instruments to be added.

"Save panel" saves all the panel settings to a file. First time the file name is
asked. This ini file is editable, and can be used to change sizes, positions and
settings of instruments.

"Load panel" loads the current contents of the ini file, so can be used to
recover from accidents, like deleting an instrument. 

"App settings" has various settings for the application:
 - IP address of the X-Plane machine
 - Fullscreen
 - Screen rotation
 - Simulated connection - Use for testing new instruments without real X-Plane connection
 - Interpolate values - You can disable this on slow devices.
 - ExtPlane update interval - time (in seconds) how often X-Plane should send updates at maximum
 - Panel update interval - time (in seconds) how often the panel should be redrawn
 - Default font size - affects all instruments


Adding new panel items
----------------------

Adding items is really easy if you know some C++ programming. Subclass
PanelItem class and implement painting and subscription to datarefs as needed.
See Button class for a really simple example. 
If your instrument is round gauge with a needle, you might want to subclass
NeedleInstrument class. See Airspeed or Variometer classes for example.

Code should be reasonably well documented. If something is not clear, please
report it.

GPL licence does not *require* you to release any changes you do to this
application if you only use them yourself. Despite this we *ask* you to 
release any new instruments you create or any other improvements you make
into the application.

Preferred way is to create a fork in github and send a pull request when
you are finished. If you don't want to do this, we're happy with any
other way to deliver the changes.


Contact/Feedback
----------------

Original Author Ville Ranki <ville.ranki@iki.fi>

Contributors:

Dan Krusi
Bob Gates
